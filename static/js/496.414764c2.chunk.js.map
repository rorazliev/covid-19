{"version":3,"file":"static/js/496.414764c2.chunk.js","mappings":"uNA4CA,UAlC4B,WAAqB,IAAD,EACxCA,GAAaC,EAAAA,EAAAA,IAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKH,cAC/CI,GAAUH,EAAAA,EAAAA,IAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,WAG5CC,GAASC,EAAAA,EAAAA,MAATD,KACNA,EAAI,UAAGA,SAAH,aAAG,EAAME,WAAW,IAAK,KAG7B,IAAMC,GAAqBC,EAAAA,EAAAA,MAW3B,OARAC,EAAAA,EAAAA,YAAU,WAER,OADAF,GAASG,EAAAA,EAAAA,IAAMN,IACR,WACLG,GAASI,EAAAA,EAAAA,UAEV,CAACJ,EAAUH,IAGVD,GAAgB,SAAC,IAAD,IAGhBJ,GAAmB,SAAC,IAAD,KAIrB,iCACE,SAAC,IAAD,CAASK,KAAMA,KACf,SAAC,IAAD","sources":["pages/StatePage.tsx"],"sourcesContent":["import React, { ReactElement, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport Chart from '../components/Chart';\nimport Error from '../components/Error';\nimport Loader from '../components/Loader';\nimport Overall from '../components/Overall';\nimport { fetch, reset } from '../redux/dataReducer';\nimport { Dispatch, useSelector } from '../redux/store';\n\nconst StatePage: React.FC = (): ReactElement => {\n  const isFetching = useSelector((state) => state.data.isFetching);\n  const isError = useSelector((state) => state.data.isError);\n\n  //\n  let { name } = useParams<{ name: string }>();\n  name = name?.replaceAll('-', ' ');\n\n  // Get a reference to the dispatch function\n  const dispatch: Dispatch = useDispatch();\n\n  // Fetch data\n  useEffect(() => {\n    dispatch(fetch(name));\n    return () => {\n      dispatch(reset());\n    };\n  }, [dispatch, name]);\n\n  // Render an error message, if the error occurs\n  if (isError) return <Error />;\n\n  // Render loader on data fetching\n  if (isFetching) return <Loader />;\n\n  // Render\n  return (\n    <>\n      <Overall name={name as string} />\n      <Chart />\n    </>\n  );\n};\n\nexport default StatePage;\n"],"names":["isFetching","useSelector","state","data","isError","name","useParams","replaceAll","dispatch","useDispatch","useEffect","fetch","reset"],"sourceRoot":""}